// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: share.proto

package hc.share;

public final class ProtoShare {
  private ProtoShare() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface ServicePointOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required uint32 containerID = 1;
    /**
     * <code>required uint32 containerID = 1;</code>
     */
    boolean hasContainerID();
    /**
     * <code>required uint32 containerID = 1;</code>
     */
    int getContainerID();

    // required uint32 serviceID = 2;
    /**
     * <code>required uint32 serviceID = 2;</code>
     */
    boolean hasServiceID();
    /**
     * <code>required uint32 serviceID = 2;</code>
     */
    int getServiceID();

    // repeated uint64 userIDs = 3;
    /**
     * <code>repeated uint64 userIDs = 3;</code>
     */
    java.util.List<java.lang.Long> getUserIDsList();
    /**
     * <code>repeated uint64 userIDs = 3;</code>
     */
    int getUserIDsCount();
    /**
     * <code>repeated uint64 userIDs = 3;</code>
     */
    long getUserIDs(int index);
  }
  /**
   * Protobuf type {@code share.ServicePoint}
   */
  public static final class ServicePoint extends
      com.google.protobuf.GeneratedMessage
      implements ServicePointOrBuilder {
    // Use ServicePoint.newBuilder() to construct.
    private ServicePoint(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ServicePoint(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ServicePoint defaultInstance;
    public static ServicePoint getDefaultInstance() {
      return defaultInstance;
    }

    public ServicePoint getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ServicePoint(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              containerID_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              serviceID_ = input.readUInt32();
              break;
            }
            case 24: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                userIDs_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000004;
              }
              userIDs_.add(input.readUInt64());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                userIDs_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                userIDs_.add(input.readUInt64());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          userIDs_ = java.util.Collections.unmodifiableList(userIDs_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return hc.share.ProtoShare.internal_static_share_ServicePoint_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return hc.share.ProtoShare.internal_static_share_ServicePoint_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              hc.share.ProtoShare.ServicePoint.class, hc.share.ProtoShare.ServicePoint.Builder.class);
    }

    public static com.google.protobuf.Parser<ServicePoint> PARSER =
        new com.google.protobuf.AbstractParser<ServicePoint>() {
      public ServicePoint parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ServicePoint(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ServicePoint> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required uint32 containerID = 1;
    public static final int CONTAINERID_FIELD_NUMBER = 1;
    private int containerID_;
    /**
     * <code>required uint32 containerID = 1;</code>
     */
    public boolean hasContainerID() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 containerID = 1;</code>
     */
    public int getContainerID() {
      return containerID_;
    }

    // required uint32 serviceID = 2;
    public static final int SERVICEID_FIELD_NUMBER = 2;
    private int serviceID_;
    /**
     * <code>required uint32 serviceID = 2;</code>
     */
    public boolean hasServiceID() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint32 serviceID = 2;</code>
     */
    public int getServiceID() {
      return serviceID_;
    }

    // repeated uint64 userIDs = 3;
    public static final int USERIDS_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Long> userIDs_;
    /**
     * <code>repeated uint64 userIDs = 3;</code>
     */
    public java.util.List<java.lang.Long>
        getUserIDsList() {
      return userIDs_;
    }
    /**
     * <code>repeated uint64 userIDs = 3;</code>
     */
    public int getUserIDsCount() {
      return userIDs_.size();
    }
    /**
     * <code>repeated uint64 userIDs = 3;</code>
     */
    public long getUserIDs(int index) {
      return userIDs_.get(index);
    }

    private void initFields() {
      containerID_ = 0;
      serviceID_ = 0;
      userIDs_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasContainerID()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasServiceID()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, containerID_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, serviceID_);
      }
      for (int i = 0; i < userIDs_.size(); i++) {
        output.writeUInt64(3, userIDs_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, containerID_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, serviceID_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < userIDs_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt64SizeNoTag(userIDs_.get(i));
        }
        size += dataSize;
        size += 1 * getUserIDsList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static hc.share.ProtoShare.ServicePoint parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static hc.share.ProtoShare.ServicePoint parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static hc.share.ProtoShare.ServicePoint parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static hc.share.ProtoShare.ServicePoint parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static hc.share.ProtoShare.ServicePoint parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static hc.share.ProtoShare.ServicePoint parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static hc.share.ProtoShare.ServicePoint parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static hc.share.ProtoShare.ServicePoint parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static hc.share.ProtoShare.ServicePoint parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static hc.share.ProtoShare.ServicePoint parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(hc.share.ProtoShare.ServicePoint prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code share.ServicePoint}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements hc.share.ProtoShare.ServicePointOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return hc.share.ProtoShare.internal_static_share_ServicePoint_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return hc.share.ProtoShare.internal_static_share_ServicePoint_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                hc.share.ProtoShare.ServicePoint.class, hc.share.ProtoShare.ServicePoint.Builder.class);
      }

      // Construct using hc.share.ProtoShare.ServicePoint.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        containerID_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        serviceID_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        userIDs_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return hc.share.ProtoShare.internal_static_share_ServicePoint_descriptor;
      }

      public hc.share.ProtoShare.ServicePoint getDefaultInstanceForType() {
        return hc.share.ProtoShare.ServicePoint.getDefaultInstance();
      }

      public hc.share.ProtoShare.ServicePoint build() {
        hc.share.ProtoShare.ServicePoint result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public hc.share.ProtoShare.ServicePoint buildPartial() {
        hc.share.ProtoShare.ServicePoint result = new hc.share.ProtoShare.ServicePoint(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.containerID_ = containerID_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.serviceID_ = serviceID_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          userIDs_ = java.util.Collections.unmodifiableList(userIDs_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.userIDs_ = userIDs_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof hc.share.ProtoShare.ServicePoint) {
          return mergeFrom((hc.share.ProtoShare.ServicePoint)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(hc.share.ProtoShare.ServicePoint other) {
        if (other == hc.share.ProtoShare.ServicePoint.getDefaultInstance()) return this;
        if (other.hasContainerID()) {
          setContainerID(other.getContainerID());
        }
        if (other.hasServiceID()) {
          setServiceID(other.getServiceID());
        }
        if (!other.userIDs_.isEmpty()) {
          if (userIDs_.isEmpty()) {
            userIDs_ = other.userIDs_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureUserIDsIsMutable();
            userIDs_.addAll(other.userIDs_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasContainerID()) {
          
          return false;
        }
        if (!hasServiceID()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        hc.share.ProtoShare.ServicePoint parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (hc.share.ProtoShare.ServicePoint) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required uint32 containerID = 1;
      private int containerID_ ;
      /**
       * <code>required uint32 containerID = 1;</code>
       */
      public boolean hasContainerID() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint32 containerID = 1;</code>
       */
      public int getContainerID() {
        return containerID_;
      }
      /**
       * <code>required uint32 containerID = 1;</code>
       */
      public Builder setContainerID(int value) {
        bitField0_ |= 0x00000001;
        containerID_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 containerID = 1;</code>
       */
      public Builder clearContainerID() {
        bitField0_ = (bitField0_ & ~0x00000001);
        containerID_ = 0;
        onChanged();
        return this;
      }

      // required uint32 serviceID = 2;
      private int serviceID_ ;
      /**
       * <code>required uint32 serviceID = 2;</code>
       */
      public boolean hasServiceID() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required uint32 serviceID = 2;</code>
       */
      public int getServiceID() {
        return serviceID_;
      }
      /**
       * <code>required uint32 serviceID = 2;</code>
       */
      public Builder setServiceID(int value) {
        bitField0_ |= 0x00000002;
        serviceID_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 serviceID = 2;</code>
       */
      public Builder clearServiceID() {
        bitField0_ = (bitField0_ & ~0x00000002);
        serviceID_ = 0;
        onChanged();
        return this;
      }

      // repeated uint64 userIDs = 3;
      private java.util.List<java.lang.Long> userIDs_ = java.util.Collections.emptyList();
      private void ensureUserIDsIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          userIDs_ = new java.util.ArrayList<java.lang.Long>(userIDs_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated uint64 userIDs = 3;</code>
       */
      public java.util.List<java.lang.Long>
          getUserIDsList() {
        return java.util.Collections.unmodifiableList(userIDs_);
      }
      /**
       * <code>repeated uint64 userIDs = 3;</code>
       */
      public int getUserIDsCount() {
        return userIDs_.size();
      }
      /**
       * <code>repeated uint64 userIDs = 3;</code>
       */
      public long getUserIDs(int index) {
        return userIDs_.get(index);
      }
      /**
       * <code>repeated uint64 userIDs = 3;</code>
       */
      public Builder setUserIDs(
          int index, long value) {
        ensureUserIDsIsMutable();
        userIDs_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint64 userIDs = 3;</code>
       */
      public Builder addUserIDs(long value) {
        ensureUserIDsIsMutable();
        userIDs_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint64 userIDs = 3;</code>
       */
      public Builder addAllUserIDs(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureUserIDsIsMutable();
        super.addAll(values, userIDs_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint64 userIDs = 3;</code>
       */
      public Builder clearUserIDs() {
        userIDs_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:share.ServicePoint)
    }

    static {
      defaultInstance = new ServicePoint(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:share.ServicePoint)
  }

  public interface ServiceConnectCheckReqOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string certificateStr = 1;
    /**
     * <code>required string certificateStr = 1;</code>
     *
     * <pre>
     *证书
     * </pre>
     */
    boolean hasCertificateStr();
    /**
     * <code>required string certificateStr = 1;</code>
     *
     * <pre>
     *证书
     * </pre>
     */
    java.lang.String getCertificateStr();
    /**
     * <code>required string certificateStr = 1;</code>
     *
     * <pre>
     *证书
     * </pre>
     */
    com.google.protobuf.ByteString
        getCertificateStrBytes();
  }
  /**
   * Protobuf type {@code share.ServiceConnectCheckReq}
   *
   * <pre>
   *连接的安全验证
   * </pre>
   */
  public static final class ServiceConnectCheckReq extends
      com.google.protobuf.GeneratedMessage
      implements ServiceConnectCheckReqOrBuilder {
    // Use ServiceConnectCheckReq.newBuilder() to construct.
    private ServiceConnectCheckReq(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ServiceConnectCheckReq(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ServiceConnectCheckReq defaultInstance;
    public static ServiceConnectCheckReq getDefaultInstance() {
      return defaultInstance;
    }

    public ServiceConnectCheckReq getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ServiceConnectCheckReq(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              certificateStr_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return hc.share.ProtoShare.internal_static_share_ServiceConnectCheckReq_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return hc.share.ProtoShare.internal_static_share_ServiceConnectCheckReq_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              hc.share.ProtoShare.ServiceConnectCheckReq.class, hc.share.ProtoShare.ServiceConnectCheckReq.Builder.class);
    }

    public static com.google.protobuf.Parser<ServiceConnectCheckReq> PARSER =
        new com.google.protobuf.AbstractParser<ServiceConnectCheckReq>() {
      public ServiceConnectCheckReq parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ServiceConnectCheckReq(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ServiceConnectCheckReq> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string certificateStr = 1;
    public static final int CERTIFICATESTR_FIELD_NUMBER = 1;
    private java.lang.Object certificateStr_;
    /**
     * <code>required string certificateStr = 1;</code>
     *
     * <pre>
     *证书
     * </pre>
     */
    public boolean hasCertificateStr() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string certificateStr = 1;</code>
     *
     * <pre>
     *证书
     * </pre>
     */
    public java.lang.String getCertificateStr() {
      java.lang.Object ref = certificateStr_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          certificateStr_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string certificateStr = 1;</code>
     *
     * <pre>
     *证书
     * </pre>
     */
    public com.google.protobuf.ByteString
        getCertificateStrBytes() {
      java.lang.Object ref = certificateStr_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        certificateStr_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      certificateStr_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasCertificateStr()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getCertificateStrBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getCertificateStrBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static hc.share.ProtoShare.ServiceConnectCheckReq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static hc.share.ProtoShare.ServiceConnectCheckReq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static hc.share.ProtoShare.ServiceConnectCheckReq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static hc.share.ProtoShare.ServiceConnectCheckReq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static hc.share.ProtoShare.ServiceConnectCheckReq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static hc.share.ProtoShare.ServiceConnectCheckReq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static hc.share.ProtoShare.ServiceConnectCheckReq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static hc.share.ProtoShare.ServiceConnectCheckReq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static hc.share.ProtoShare.ServiceConnectCheckReq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static hc.share.ProtoShare.ServiceConnectCheckReq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(hc.share.ProtoShare.ServiceConnectCheckReq prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code share.ServiceConnectCheckReq}
     *
     * <pre>
     *连接的安全验证
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements hc.share.ProtoShare.ServiceConnectCheckReqOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return hc.share.ProtoShare.internal_static_share_ServiceConnectCheckReq_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return hc.share.ProtoShare.internal_static_share_ServiceConnectCheckReq_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                hc.share.ProtoShare.ServiceConnectCheckReq.class, hc.share.ProtoShare.ServiceConnectCheckReq.Builder.class);
      }

      // Construct using hc.share.ProtoShare.ServiceConnectCheckReq.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        certificateStr_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return hc.share.ProtoShare.internal_static_share_ServiceConnectCheckReq_descriptor;
      }

      public hc.share.ProtoShare.ServiceConnectCheckReq getDefaultInstanceForType() {
        return hc.share.ProtoShare.ServiceConnectCheckReq.getDefaultInstance();
      }

      public hc.share.ProtoShare.ServiceConnectCheckReq build() {
        hc.share.ProtoShare.ServiceConnectCheckReq result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public hc.share.ProtoShare.ServiceConnectCheckReq buildPartial() {
        hc.share.ProtoShare.ServiceConnectCheckReq result = new hc.share.ProtoShare.ServiceConnectCheckReq(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.certificateStr_ = certificateStr_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof hc.share.ProtoShare.ServiceConnectCheckReq) {
          return mergeFrom((hc.share.ProtoShare.ServiceConnectCheckReq)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(hc.share.ProtoShare.ServiceConnectCheckReq other) {
        if (other == hc.share.ProtoShare.ServiceConnectCheckReq.getDefaultInstance()) return this;
        if (other.hasCertificateStr()) {
          bitField0_ |= 0x00000001;
          certificateStr_ = other.certificateStr_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasCertificateStr()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        hc.share.ProtoShare.ServiceConnectCheckReq parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (hc.share.ProtoShare.ServiceConnectCheckReq) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string certificateStr = 1;
      private java.lang.Object certificateStr_ = "";
      /**
       * <code>required string certificateStr = 1;</code>
       *
       * <pre>
       *证书
       * </pre>
       */
      public boolean hasCertificateStr() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string certificateStr = 1;</code>
       *
       * <pre>
       *证书
       * </pre>
       */
      public java.lang.String getCertificateStr() {
        java.lang.Object ref = certificateStr_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          certificateStr_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string certificateStr = 1;</code>
       *
       * <pre>
       *证书
       * </pre>
       */
      public com.google.protobuf.ByteString
          getCertificateStrBytes() {
        java.lang.Object ref = certificateStr_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          certificateStr_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string certificateStr = 1;</code>
       *
       * <pre>
       *证书
       * </pre>
       */
      public Builder setCertificateStr(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        certificateStr_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string certificateStr = 1;</code>
       *
       * <pre>
       *证书
       * </pre>
       */
      public Builder clearCertificateStr() {
        bitField0_ = (bitField0_ & ~0x00000001);
        certificateStr_ = getDefaultInstance().getCertificateStr();
        onChanged();
        return this;
      }
      /**
       * <code>required string certificateStr = 1;</code>
       *
       * <pre>
       *证书
       * </pre>
       */
      public Builder setCertificateStrBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        certificateStr_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:share.ServiceConnectCheckReq)
    }

    static {
      defaultInstance = new ServiceConnectCheckReq(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:share.ServiceConnectCheckReq)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_share_ServicePoint_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_share_ServicePoint_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_share_ServiceConnectCheckReq_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_share_ServiceConnectCheckReq_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\013share.proto\022\005share\"G\n\014ServicePoint\022\023\n\013" +
      "containerID\030\001 \002(\r\022\021\n\tserviceID\030\002 \002(\r\022\017\n\007" +
      "userIDs\030\003 \003(\004\"0\n\026ServiceConnectCheckReq\022" +
      "\026\n\016certificateStr\030\001 \002(\tB\026\n\010hc.shareB\nPro" +
      "toShare"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_share_ServicePoint_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_share_ServicePoint_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_share_ServicePoint_descriptor,
              new java.lang.String[] { "ContainerID", "ServiceID", "UserIDs", });
          internal_static_share_ServiceConnectCheckReq_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_share_ServiceConnectCheckReq_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_share_ServiceConnectCheckReq_descriptor,
              new java.lang.String[] { "CertificateStr", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
